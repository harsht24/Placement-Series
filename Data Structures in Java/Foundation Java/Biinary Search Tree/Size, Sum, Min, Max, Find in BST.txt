// https://www.pepcoding.com/resources/online-java-foundation/binary-search-tree/size-sum-max-min-find-in-bst-official/ojquestion#

  public static int size(Node node) {
    // write your code here
    if(node == null){
        return 0;
    }
    int l = size(node.left);
    int r = size(node.right);
    
    int total = l + r + 1;
    return total;
  }

  public static int sum(Node node) {
    // write your code here
    if(node == null){
        return 0;
    }
    int l = sum(node.left);
    int r = sum(node.right);
    
    int total = l + r + node.data;
    return total;
  }

  public static int max(Node node) {
    // write your code here
    if(node.right!=null){
        return max(node.right);
    }
    else{
        return node.data;
    }
  }

  public static int min(Node node) {
    // write your code here
    if(node.left!=null){
        return min(node.left);
    }
    else{
        return node.data;
    }
  }

  public static boolean find(Node node, int data){
    // write your code here
    if(node==null){
        return false;
    }
    
    if(node.data==data){
        return true;
    }
    else if(node.data > data){
        return find(node.left, data);
    }
    else if(node.data < data){
        return find(node.right, data);
    }
    return false;
  }  
